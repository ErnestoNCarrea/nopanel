#!/bin/bash

nopanel_web_domain_commit() {
    nplib_command_echo "= Commit web domain configuration"
    if [[ "$param_help" ]]; then
        nopanel web help
        return
    fi

    nplib_auto_elevate
    nplib_require $NOPANEL_LIB/module.inc
    nplib_require $NOPANEL_LIB/user.inc
    nplib_require $NOPANEL_LIB/domain.inc
    nplib_require $NOPANEL_LIB/commit.inc

    if [[ "$param_user" ]]; then
        nopanel_web_domain_rebuild_user
    else
        # Rebuild all users
        for param_user in $(nplib_users_list); do
            nopanel_web_domain_rebuild_user
        done
        unset param_user
    fi

    if [[ "$param_reload" ]]; then
        nopanel module apache reload
    fi

    nplib_command_output 'ok' 'Web domain configuration applied'
}

nopanel_web_domain_rebuild_user() {
    if [[ "$param_domain" ]]; then
        nopanel_web_domain_rebuild_user_domain
    else
        # Rebuild all domains
        if [[ "$param_all" ]]; then
            local DELETED=""
            local CHANGED="$(nplib_domains_list)"
        else
            local DELETED=$(nplib_commits_get_deleted $NOPANEL_HOME/$param_user/.nopanel/domains.json)
            local CHANGED=$(nplib_commits_get_changed $NOPANEL_HOME/$param_user/.nopanel/domains.json)
        fi

        for param_domain in $DELETED; do
            nopanel_web_domain_delete_user_domain
        done

        for param_domain in $CHANGED; do
            nopanel_web_domain_rebuild_user_domain
        done
        unset param_domain
    fi

    nplib_commits_save $NOPANEL_HOME/$param_user/.nopanel/domains.json
}

nopanel_web_domain_rebuild_user_domain() {
    local DOMAIN_WEB=$(nplib_domains_get "$param_domain" 'web')

    if [ $DOMAIN_WEB = 'delete' ]; then
        nopanel_web_domain_delete_user_domain
        return
    fi
    if ! nplib_is_true $DOMAIN_WEB; then
        nopanel_web_domain_delete_user_domain
        return
    fi
    nplib_command_echo "- Configuring web domain $param_user/$param_domain"

    # Create and populate default folders
    local USER_HOME="$NOPANEL_HOME/$param_user"
    local USER_TMP="$NOPANEL_HOME/$param_user/tmp"
    local DOMAIN_HOME=$USER_HOME/web/$param_domain
    local DOMAIN_DOCROOT=$DOMAIN_HOME/public_html
    mkdir -p $DOMAIN_HOME $DOMAIN_DOCROOT $DOMAIN_HOME/logs
    chown $param_user:$param_user "$USER_HOME/web"
    chown $param_user:$param_user $DOMAIN_HOME $DOMAIN_DOCROOT $DOMAIN_HOME/logs

    local DOMAIN_ALIASES=$(nplib_domains_get "$param_domain" 'web_aliases')
    local DOMAIN_PHP=$(nplib_domains_get "$param_domain" 'web_php')
    local DOMAIN_SSL=$(nplib_domains_get "$param_domain" 'web_ssl')
    local USER_EMAIL=$(nplib_users_get "$param_user" 'email')
    local WEB_LOGS=$(nplib_modules_get 'web' 'logs')
    local DOMAIN_LOGS=$DOMAIN_HOME/logs
    local WEB_SERVER=$(nplib_modules_get 'web' 'server')

    local DOMAIN_IDN=$(nplib_domain_idn $param_domain)
    local DOMAIN_ALIASES_IDN=$(nplib_domain_aliases_idn $DOMAIN_ALIASES)
    [[ "$USER_EMAIL" ]] || USER_EMAIL="webmaster@$param_domain"
    local APACHE_DEFINES='Define NOPANEL'

    if [[ "$DOMAIN_ALIASES" ]]; then
        local APACHE_ALIASES="ServerAlias ${DOMAIN_ALIASES_IDN//,/ }"
        APACHE_DEFINES="$APACHE_DEFINES\n    Define NOPANEL_HAS_ALIASES"
    else
        local APACHE_ALIASES=''
    fi

    if ! nplib_is_false $DOMAIN_PHP; then
        APACHE_DEFINES="$APACHE_DEFINES\n    Define NOPANEL_PHP_FPM"
        local PHP_FPM=$DOMAIN_PHP
        local PHP_FPM_SOCK_STD=$(osal_php_fpm_sock $DOMAIN_PHP)
        PHP_FPM_SOCK=${PHP_FPM_SOCK_STD/www/$param_domain}
        local PHP_FPM_FGCI='localhost'

        touch $DOMAIN_LOGS/php_errors.log
        chown $param_user:$param_user $DOMAIN_LOGS/php_errors.log
        chmod 0660 $DOMAIN_LOGS/php_errors.log
    fi

    mkdir -p $USER_TMP
    chown $param_user:$param_user $USER_TMP

    if [[ ! -s "$DOMAIN_HOME/.nopanel.installed" ]]; then
        nplib_command_echo "- Folder skeleton"
        # Looks empty
        pushd $NOPANEL_DATA/web/skel > /dev/null
        for FILE in $(find ./ -type f); do
            nopanel_web_domain_commit_install_file "$NOPANEL_DATA/web/skel/$FILE" "$DOMAIN_HOME/$FILE"
            chown $param_user:$param_user "$DOMAIN_HOME/$FILE"
        done
        popd > /dev/null

        echo '# This file prevents noPanel from filling public_html again / https://www.nopanel.cc' >> "$DOMAIN_HOME/.nopanel.installed"
        chown $param_user:$param_user "$DOMAIN_HOME/.nopanel.installed"
    fi

    case "$DOMAIN_SSL" in
        'le')
            SSL_CERT="/etc/nopanel/pki/letsencrypt/${param_domain}.crt"
            SSL_KEY="/etc/nopanel/pki/letsencrypt/${param_domain}.key"
            SSL_CHAIN="/etc/nopanel/pki/letsencrypt/${param_domain}.ca"

            nplib_command_echo "- Setting up SSL with Let's Encrypt"
            if [[ ! -s "$SSL_CERT" ]]; then
                nplib_command_echo "- Getting the certificate from Let's Encrypt"
                local GETSSL_DOMAIN_CONFIG=~/.getssl/$param_domain/getssl.cfg
                if [[ ! -f "$GETSSL_DOMAIN_CONFIG" ]]; then
                    local GETSSL_USER_CONFIG=~/.getssl/getssl.cfg
                    # create and set getssl domain config if it doesn't exist
                    $NOPANEL_LIB/getssl --create $param_domain
                    # set user email
                    sed -i "s/^#ACCOUNT_EMAIL=\"me@example.com\"/ACCOUNT_EMAIL=\"$USER_EMAIL\"/" $GETSSL_USER_CONFIG
                    # set production mode
                    sed -i "s/^CA=\"https://acme-staging-v02/#CA=\"https://acme-staging-v02/" $GETSSL_USER_CONFIG
                    sed -i "s/^#CA=\"https://acme-v02/CA=\"https://acme-v02/" $GETSSL_USER_CONFIG
                fi

                # set getssl domain config if it doesn't exist
                osal_kv_write $GETSSL_DOMAIN_CONFIG 'USE_SINGLE_ACL' '"false"'
                osal_kv_write $GETSSL_DOMAIN_CONFIG 'ACL' '(''/var/www/html/.well-known/acme-challenge'')'
                osal_kv_write $GETSSL_DOMAIN_CONFIG 'DOMAIN_CERT_LOCATION' "$SSL_CERT"
                osal_kv_write $GETSSL_DOMAIN_CONFIG 'DOMAIN_KEY_LOCATION' "$SSL_KEY"
                osal_kv_write $GETSSL_DOMAIN_CONFIG 'CA_CERT_LOCATION' "$SSL_CHAIN"
                if [[ "$param_aliases" ]]; then
                    osal_kv_write $GETSSL_DOMAIN_CONFIG 'SANS' "$param_aliases"
                else
                    osal_kv_delete $GETSSL_DOMAIN_CONFIG 'SANS'
                fi

                # run getssl to obtain the actual cert
                nplib_command_echo "- Getting certificate"
                $NOPANEL_LIB/getssl $param_domain
            fi

            if [ -f "$SSL_CERT" ] && [ -f "$SSL_KEY" ] && [ -f "$SSL_CHAIN" ]; then
                APACHE_DEFINES="$APACHE_DEFINES\n    Define NOPANEL_SSL"
                APACHE_DEFINES="$APACHE_DEFINES\n    Define NOPANEL_SSL_CHAIN"
            fi
            ;;
        'self')
            mkdir -p /etc/nopanel/pki/self
            SSL_CERT="/etc/nopanel/pki/self/${param_domain}.crt"
            SSL_KEY="/etc/nopanel/pki/self/${param_domain}.key"
            SSL_CHAIN=""
            local NOPANEL_HOSTNAME=$(hostname --fqdn)

            nplib_command_echo "- Setting up SSL with self-signed certificate"
            if [ ! -s "$SSL_CERT" ]; then
                # generate self-signed certificate
                nplib_command_echo "- Creating the self-signed certificate"
                openssl req -x509 -nodes -days 7300 -newkey rsa:2048 \
                    -keyout $SSL_KEY \
                    -out $SSL_CERT \
                    -subj "/C=AR/ST=Tierra del Fuego/L=Ushuaia/O=noPanel/OU=$param_user/CN=$param_domain"
            fi

            if [[ -f "$SSL_CERT" ]] && [[ -f "$SSL_KEY" ]]; then
                APACHE_DEFINES="$APACHE_DEFINES\n    Define NOPANEL_SSL"
            fi
            ;;
        'no')
            SSL_CERT=""
            SSL_KEY=""
            SSL_CHAIN=""
            nplib_safe_rm "~/.getssl/$param_domain"
            :
            ;;
        *)
            SSL_CERT=""
            SSL_KEY=""
            SSL_CHAIN=""
            ;;
    esac

    nplib_command_echo "- Setup logs and permissions"
    # Setup logs
    touch $WEB_LOGS/domains/$param_domain.bytes \
        $WEB_LOGS/domains/$param_domain.log \
        $WEB_LOGS/domains/$param_domain.error.log
    chmod 0664 $WEB_LOGS/domains/$param_domain.bytes \
        $WEB_LOGS/domains/$param_domain.log \
        $WEB_LOGS/domains/$param_domain.error.log
    ln -f -s $WEB_LOGS/domains/$param_domain.*log \
        $DOMAIN_HOME/logs/

    # Apache config

    #mkdir -p $USER_HOME/nopanel/web
    #chown -R $param_user:$param_user "$USER_HOME/nopanel/web"
    local APACHE_CONF_FILE=$OSAL_PATH_APACHE_CONF_D/domains/user_${param_user}_domain_${param_domain}.conf
    local APACHE_SSL_CONF_FILE=$OSAL_PATH_APACHE_CONF_D/domains/user_${param_user}_domain_${param_domain}.ssl.conf
    nopanel_web_domain_commit_install_file "$NOPANEL_DATA/web/apache/domain.http.conf" $APACHE_CONF_FILE 'overwrite'
    if [[ "$SSL_CERT" ]]; then
        nopanel_web_domain_commit_install_file "$NOPANEL_DATA/web/apache/domain.https.conf" $APACHE_SSL_CONF_FILE 'overwrite'
    else
        nplib_safe_rm $APACHE_SSL_CONF_FILE
    fi

    if ! nplib_is_false "$DOMAIN_PHP"; then
        PHP_FPM_CONF_FILE=$(osal_php_fpm_pool_d $DOMAIN_PHP)/${param_domain}.conf
        nopanel_web_domain_commit_install_file "$NOPANEL_DATA/web/php-fpm/domain.conf" $PHP_FPM_CONF_FILE 'overwrite'   
        local php_prefix=$(osal_php_package_prefix $DOMAIN_PHP)
        osal_service_restart $php_prefix-fpm > /dev/null 2>&1
    #else remove old/unsed PHP_FPM_CONF_FILE
    fi

    # set a link to the apache config in the user directory
    # ln -s -f $APACHE_CONF_FILE "$USER_HOME/nopanel/web/apache-$param_domain.conf"
}

nopanel_web_domain_delete_user_domain() {
    local APACHE_CONF_FILE=$OSAL_PATH_APACHE_CONF_D/domains/user_${param_user}_domain_${param_domain}.conf
    local APACHE_SSL_CONF_FILE=$OSAL_PATH_APACHE_CONF_D/domains/user_${param_user}_domain_${param_domain}.ssl.conf
    if [[ -f $APACHE_CONF_FILE ]]; then
        nplib_command_echo "- Deleting web domain $param_domain"
        local WEB_LOGS=$(nplib_modules_get 'web' 'logs')
        nplib_safe_rm $WEB_LOGS/domains/$param_domain $APACHE_CONF_FILE $APACHE_SSL_CONF_FILE
    fi
    nplib_domains_set "$param_domain" 'web' 'no'
}

# copy a file to a destination, replacing template vars
# nopanel_web_domain_commit_install_file '/src/folder/file' '/dst/folder/file' [overwrite]
nopanel_web_domain_commit_install_file() {
    SRC_FILE=$1
    DST_FILE=$2
    if [ ! -f $DST_FILE ] || [ "$3" = 'overwrite' ]; then
        nplib_command_log "- Install $SRC_FILE in $DST_FILE"
        cat $SRC_FILE | sed \
            -e "s|%NOPANEL_IP%|\*|g" \
            -e "s|%NOPANEL_USER%|$param_user|g" \
            -e "s|%NOPANEL_USER_GROUP%|$param_user|g" \
            -e "s|%NOPANEL_USER_HOME%|$USER_HOME|g" \
            -e "s|%NOPANEL_USER_TMP%|$USER_TMP|g" \
            -e "s|%NOPANEL_USER_EMAIL%|$USER_EMAIL|g" \
            -e "s|%NOPANEL_DOMAIN%|$param_domain|g" \
            -e "s|%NOPANEL_DOMAIN_HOME%|$DOMAIN_HOME|g" \
            -e "s|%NOPANEL_DOMAIN_LOGS%|$DOMAIN_LOGS|g" \
            -e "s|%NOPANEL_DOMAIN_IDN%|$DOMAIN_IDN|g" \
            -e "s|%NOPANEL_ALIASES%|${DOMAIN_ALIASES//,/ }|g" \
            -e "s|%NOPANEL_ALIASES_IDN%|$DOMAIN_ALIASES_IDN|g" \
            -e "s|%NOPANEL_WEB_LOGS%|$WEB_LOGS|g" \
            -e "s|%NOPANEL_DOCROOT%|$DOMAIN_DOCROOT|g" \
            -e "s|%NOPANEL_APACHE_DEFINES%|$APACHE_DEFINES|g" \
            -e "s|%NOPANEL_APACHE_ALIASES%|${APACHE_ALIASES}|g" \
            -e "s|%NOPANEL_PHP_FPM%|$PHP_FPM|g" \
            -e "s|%NOPANEL_PHP_FPM_SOCK%|$PHP_FPM_SOCK|g" \
            -e "s|%NOPANEL_PHP_FPM_FGCI%|$PHP_FPM_FGCI|g" \
            -e "s|%NOPANEL_SSL_CERT%|$SSL_CERT|g" \
            -e "s|%NOPANEL_SSL_KEY%|$SSL_KEY|g" \
            -e "s|%NOPANEL_SSL_CHAIN%|$SSL_CHAIN|g" \
        > $DST_FILE
    fi
}

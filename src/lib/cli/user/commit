#!/bin/bash

nopanel_user_commit() {
    nplib_command_echo "= Commit user configuration"

    if [[ "$param_help" ]]; then
        nopanel user help
        return
    fi

    nplib_auto_elevate
    nplib_require $NOPANEL_LIB/user.inc
    nplib_require $NOPANEL_LIB/commit.inc

    if [[ "$param_user" ]]; then
        nopanel_user_commit_update
    else
        # Rebuild all users
        if [[ "$param_all" ]]; then
            local DELETED=""
            local CHANGED="$(nplib_users_list)"
        else
            local DELETED=$(nplib_commits_get_deleted $NOPANEL_ETC/users.json)
            local CHANGED=$(nplib_commits_get_changed $NOPANEL_ETC/users.json)
        fi

        for param_user in $DELETED; do
            nopanel_user_commit_delete
        done

        for param_user in $CHANGED; do
            nopanel_user_commit_update
        done
        unset param_user
    fi
    
    nplib_commits_save $NOPANEL_ETC/users.json

    nplib_command_output 'ok' 'User configuration applied'
}

nopanel_user_commit_update() {
    nplib_command_echo "- Creating/updating user $param_user"
    local USER_HOME="$NOPANEL_HOME/$param_user"
    local USER_FULLNAME=$(nplib_users_get "$param_user" 'fullname')
    local USER_EMAIL=$(nplib_users_get "$param_user" 'email')
    local USER_LOGIN=$(nplib_users_get "$param_user" 'login')
    local USER_ADMIN=$(nplib_users_get "$param_user" 'admin')
    local USER_PASSWORD=$(nplib_users_get "$param_user" 'password')
    local useradd_params="--groups nopanel-users "

    # Add user and set password
    if ! id "$param_user" &>/dev/null; then
        if [[ -d "$USER_HOME" ]]; then
            useradd_params="$useradd_params --no-create-home"     # Do not create home directory
            nplib_command_echo ' - Not creating home directory because it already exists'
        else
            # Create user home directory
            useradd_params="$useradd_params --create-home --home-dir $USER_HOME"
        fi

        /usr/sbin/useradd $useradd_params $param_user > /dev/null 2>&1
    fi

    # change password if specified
    if [[ "$USER_PASSWORD" ]]; then
        nplib_command_echo ' - Setting password'
        echo "$param_user:$USER_PASSWORD" | /usr/sbin/chpasswd
        # and clear password in db
        nplib_users_set "$param_user" 'password' ''
    fi

    # Default shell
    if ! nplib_is_false "$USER_LOGIN"; then
        if [[ "$USER_LOGIN" = 'sftp' ]]; then
            # Add to the sftp group, to allow only SFTP
            osal_user_add_group "$param_user" 'nopanel-sftp'
            osal_user_set_shell "$param_user" '/usr/sbin/nologin'
        else
            # Remove from the sftp group, to allow SSH
            osal_user_del_group "$param_user" 'nopanel-sftp'
            osal_user_set_shell "$param_user" '/usr/bin/bash'
        fi
    else
        # disable login and remove from the sftp group
        osal_user_set_shell "$param_user" '/usr/sbin/nologin'
        osal_user_del_group "$param_user" 'nopanel-sftp'
    fi

    nplib_command_echo ' - Setting up home directory and permissions'
    
    mkdir -p $USER_HOME

    # Add membership to nopanel-users group to non-admin users
    if [ "$param_user" = "admin" ]; then
        setfacl -m "g:admin:r-x" "$USER_HOME" > /dev/null 2>&1
    else
        usermod -a -G "nopanel-users" "$param_user" > /dev/null 2>&1
        setfacl -m "u:$param_user:r-x" "$USER_HOME" > /dev/null 2>&1
    fi
    setfacl -m "g:nopanel-users:---" "$USER_HOME" > /dev/null 2>&1
    chown $param_user:root $USER_HOME
    chmod 0751 $USER_HOME

    # Create default writeable folders
    nopanel_user_commit_create_owned_folder \
        $USER_HOME/.nopanel \
        $USER_HOME/.config \
        $USER_HOME/.cache \
        $USER_HOME/.local \
        $USER_HOME/.composer \
        $USER_HOME/.ssh \
        $USER_HOME/.npm

    chgrp nopanel-admins $USER_HOME/nopanel
    chmod 0750 $USER_HOME/nopanel

    nplib_command_echo ' - Creating user noPanel environment'
    for FILE in nopanel.json domains.json databases.json
    do
        [[ -s "$USER_HOME/nopanel/$FILE" ]] || echo '{}' > "$USER_HOME/nopanel/$FILE"
        chmod 0640 $USER_HOME/nopanel/$FILE
        chown $param_user:nopanel-admins $USER_HOME/nopanel/$FILE
    done
}

nopanel_user_commit_delete() {
    nplib_command_echo "- Deleting user $param_user"
    local USER_HOME="$NOPANEL_HOME/$param_user"
    chattr -i "$NOPANEL_HOME/$param_user/conf" > /dev/null 2>&1

    /usr/sbin/userdel $param_user > /dev/null 2>&1

    if [[ "$param_delete" ]]; then
        if [[ ! "$param_no_backup" ]]; then
            nplib_command_echo ' - Creating backup (this might take a while)'
            nplib_config_backup "user-remove-$param_user" $NOPANEL_HOME/$param_user $USER_HOME
        fi
        nplib_command_echo ' - Deleting user data (this might take a while)'
        nplib_safe_rm "$NOPANEL_HOME/$param_user" $USER_HOME
    fi
}

nopanel_user_commit_create_owned_folder() {
    if [[ ! -d $1 ]]; then
        mkdir -p $1
    fi
    chown $param_user:$param_user $1
}
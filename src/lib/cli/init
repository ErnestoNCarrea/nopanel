#!/bin/bash

if [[ -z "$NOPANEL_VERSION" ]]; then
    echo "This file should not be called without the proper environment. Use nopanel CLI instead."
    exit 1
fi

nopanel_init() {
    nopanel_command_echo "Initializing noPanel version $NOPANEL_VERSION"

    # Add a general group for normal users and admins
    if [ -z "$(grep ^nopanel-users: /etc/group)" ]; then
        groupadd --system "nopanel-users"
    fi
    if [ -z "$(grep ^nopanel-admins: /etc/group)" ]; then
        groupadd --system "nopanel-admins"
    fi

    mkdir -p $NOPANEL_STATE $NOPANEL_ETC $NOPANEL_LOG $NOPANEL_ETC/users $NOPANEL_ETC/domains
    chmod 0770 $NOPANEL_STATE $NOPANEL_ETC $NOPANEL_LOG
    chown root:nopanel-admins $NOPANEL_ETC $NOPANEL_LOG

    # Initialize missing configuration files to empty json
    for FILE in nopanel.json modules.json
    do
        [[ -f "$NOPANEL_ETC/$FILE" ]] || echo '{}' >> "$NOPANEL_ETC/$FILE"
        chmod 0660 "$NOPANEL_ETC/$FILE"
    done

    nopanel_command_return 'ok' 'noPanel ready'
}

# If this files is _not_ being sourced, act immediately
if [ "${BASH_SOURCE[0]}" == "${0}" ]; then
    npctl $@
fi
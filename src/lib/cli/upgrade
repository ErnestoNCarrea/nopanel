#!/bin/bash

if [[ -z "$NOPANEL_VERSION" ]]; then
    echo "This file should not be called without the proper environment. Use nopanel CLI instead."
    exit 1
fi

nopanel_upgrade() {
    nplib_auto_elevate
    nplib_command_echo "Upgrading noPanel to version $NOPANEL_VERSION"

    # get getssl to manage Let's Encrypt certificates
    curl --silent https://raw.githubusercontent.com/srvrco/getssl/master/getssl > $NOPANEL_LIB/getssl
    chmod a+x $NOPANEL_LIB/getssl

    mkdir -p $NOPANEL_ETC/pki
    mkdir -p /var/www/html/.well-known/acme-challenge

    # update version
    osal_json_set "/etc/nopanel/nopanel.json" ".version=\"$NOPANEL_VERSION\""

    # Upgrade users
    nplib_require $NOPANEL_LIB/user.inc
    local USERS=$(nplib_users_list)
    for param_user in $USERS; do
        if [ -d $NOPANEL_HOME/$param_user/nopanel ]; then
            # This folder used to be called "nopanel", it's now called ".nopanel"
            mv $NOPANEL_HOME/$param_user/nopanel $NOPANEL_HOME/$param_user/.nopanel
        fi
    done

    # log permissions
    chmod 0775 /var/log/$OSAL_PKG_APACHE
    chmod 0775 /var/log/$OSAL_PKG_APACHE/domains

    nplib_command_output 'ok' 'noPanel ready'
}

# If this files is _not_ being sourced, act immediately
if [ "${BASH_SOURCE[0]}" == "${0}" ]; then
    npctl $@
fi